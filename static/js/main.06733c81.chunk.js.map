{"version":3,"sources":["components/toggle-button/toggle-button.js","components/filter-data-buttons/filter-data-buttons.js","components/toggle-pin/toggle-pin.js","components/data-table/data-table.js","components/output/output.js","App.js","serviceWorker.js","index.js"],"names":["ToggleButton","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","toggled","onClick","setState","classNames","push","react_default","a","createElement","key","c","className","join","onClickButton","bind","type","React","Component","FilterDataButtons","filter","value","setFilter","title","values","map","i","toggle_button","TogglePin","onPin","onPinClick","width","height","viewBox","version","aria-hidden","fillRule","d","uniqueLevel","_","chain","Data","level","s_lvl","sort","flatten","uniq","uniqueSchool","school","s_school","uniqueType","s_type","uniqueClass","classes","s_class_usage","DataTable","data","showList","filterSearch","filterButton","pin","id","filters","School of Magic","Level","Effect Type","Class","assertThisInitialized","removePin","addClassName","e","spellState","toggle","queryIds","f","includes","_this2","placeholder","onChange","target","onClickFilter","filter_data_buttons","newFilters","_this3","sortFilters","filteredData","orderBy","spell","length","some","s_name","toLowerCase","slice","toggle_pin","s_id","s_ritual","s_cast_time","s_range","s_components","s_duration","ReactHtmlParser","s_description","_this4","pinnedSpells","searchBar","filterFilter","filterDropdowns","dataTablePinned","dataTable","Output","data_table","App","output","href","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","console","log"],"mappings":"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","file":"static/js/main.06733c81.chunk.js","sourcesContent":["import React from 'react'\n\nclass ToggleButton extends React.Component {\n  constructor(props) {\n    super()\n    this.state = {\n      toggled: true\n    }\n  }\n\n  onClickButton() {\n    this.props.onClick(this.props, this.state)\n    this.setState({\n      toggled: this.state.toggled === true ? false : true,\n    })\n  }\n\n  render() {\n    const classNames = ['btn']\n\n    if (this.state.toggled === false) {\n      classNames.push('selected')\n    }\n\n    return (\n      <div key={this.props.c} className={classNames.join(' ')} onClick={this.onClickButton.bind(this)}>{this.props.type}</div>\n    )\n  }\n\n}\n\nexport default ToggleButton\n","import React from 'react'\nimport ToggleButton from '../toggle-button/toggle-button'\n\nclass FilterDataButtons extends React.Component {\n  onClickButton(filter, value) {\n    this.props.setFilter(this.props.title, filter, value)\n  }\n\n  render() {\n    return (\n      <div className={\"filter-button-wrapper\"}>\n        <h2>{this.props.title}</h2>\n        <div className={\"selector\"}>\n          {this.props.values.map((value, i) => {\n            return <ToggleButton type={value} key={i} onClick={this.onClickButton.bind(this)} />\n          })}\n        </div>\n      </div>\n    )\n  }\n\n}\n\nexport default FilterDataButtons\n","import React from 'react'\n\nclass TogglePin extends React.Component {\n  constructor(props) {\n    super()\n    this.state = {\n      toggled: true\n    }\n  }\n\n  onPinClick() {\n    this.props.onPin(this.state.toggled, this.props.type)\n    this.setState({\n      toggled: this.state.toggled === false\n    })\n  }\n\n  onClickButton(filter, value) {\n    this.props.setFilter(this.props.title, filter, value)\n  }\n\n  render() {\n    return (\n      <svg key={this.props.c} className={\"spell-pin\"} onClick={this.onPinClick.bind(this)} width=\"20\" height=\"20\" viewBox=\"0 0 16 16\" version=\"1.1\" aria-hidden=\"true\"><path fillRule=\"evenodd\" d=\"M10 1.2V2l.5 1L6 6H2.2c-.44 0-.67.53-.34.86L5 10l-4 5 5-4 3.14 3.14a.5.5 0 0 0 .86-.34V10l3-4.5 1 .5h.8c.44 0 .67-.53.34-.86L10.86.86a.5.5 0 0 0-.86.34z\"></path></svg>\n    )\n  }\n\n}\n\nexport default TogglePin\n","import React, { Component } from 'react'\nimport Data from '.././../data/spells.json'\nimport ReactHtmlParser from 'react-html-parser'\nimport _ from 'lodash'\nimport FilterDataButtons from '../filter-data-buttons/filter-data-buttons'\nimport TogglePin from '../toggle-pin/toggle-pin'\n\nlet sortLevel = _.chain(Data)\nlet uniqueLevel = sortLevel.map(function(level) {\n  return level.s_lvl\n})\n.sort()\n.flatten()\n.uniq()\n.value()\n\nlet sortSchool = _.chain(Data)\nlet uniqueSchool = sortSchool.map(function(school) {\n  return school.s_school\n})\n.sort()\n.flatten()\n.uniq()\n.value()\n\nlet sortType = _.chain(Data)\nlet uniqueType = sortType.map(function(type) {\n  return type.s_type\n})\n.sort()\n.flatten()\n.uniq()\n.value()\n\nlet sortClass = _.chain(Data)\nlet uniqueClass = sortClass.map(function(classes) {\n  return classes.s_class_usage\n})\n.sort()\n.flatten()\n.uniq()\n.value()\n\nclass DataTable extends Component {\n  constructor(props) {\n    super()\n    this.state = {\n      data: Data,\n      showList: false,\n      filterSearch: '',\n      filterButton: false,\n      pin: {\n        'id': []\n      },\n      filters: {\n        'School of Magic': [],\n        'Level': [],\n        'Effect Type': [],\n        'Class': []\n      }\n    }\n\n    this.onPin = this.onPin.bind(this)\n    this.removePin = this.removePin.bind(this)\n    this.setFilter = this.setFilter.bind(this)\n    this.addClassName = this.addClassName.bind(this)\n  }\n\n  addClassName(e, i) {\n    let spellState = this.state\n    spellState.showList = spellState.showList === i ? false : i\n    this.setState(spellState)\n  }\n\n  onPin(toggle, id) {\n    const queryIds = this.state.pin\n\n    if (!queryIds['id']) {\n      queryIds['id'] = []\n    }\n\n    if (toggle !== false) {\n      queryIds['id'].push(id)\n    }\n    else {\n      queryIds['id'] = queryIds['id'].filter(f => f !== id)\n    }\n\n    this.setState({\n      pin: queryIds\n    })\n  }\n\n  removePin(id) {\n    const queryIds = this.state.pin\n\n    if (_.includes(queryIds['id'], id) === true) {\n      queryIds['id'] = queryIds['id'].filter(f => f !== id)\n\n      this.setState({\n        pin: queryIds\n      })\n    }\n  }\n\n  searchBar() {\n    return (\n      <div className={\"filter-search\"}>\n        <input placeholder={\"Search\"} className={\"search-input\"} onChange={(e) => {\n          this.setState({filterSearch: e.target.value})\n          }}/>\n      </div>\n    )\n  }\n\n  onClickFilter() {\n    this.setState({\n      filterButton: this.state.filterButton === true ? false : true,\n    })\n  }\n\n  filterFilter() {\n    return (\n      <div className={\"filter-filter\"} onClick={this.onClickFilter.bind(this)}>\n        <div className={\"filter-field\"}>\n          Filters\n        </div>\n      </div>\n    )\n  }\n\n  filterDropdowns() {\n    return (\n      <div className={this.state.filterButton === true ? \"filter-dropdown active\" : \"filter-dropdown hidden\"}>\n        <div className={\"filter-close\"} onClick={this.onClickFilter.bind(this)}></div>\n        <FilterDataButtons title={'Level'} values={uniqueLevel} setFilter={this.setFilter} />\n        <FilterDataButtons title={'Class'} values={uniqueClass} setFilter={this.setFilter} />\n        <FilterDataButtons title={'School of Magic'} values={uniqueSchool} setFilter={this.setFilter} />\n        <FilterDataButtons title={'Effect Type'} values={uniqueType} setFilter={this.setFilter} />\n      </div>\n    )\n  }\n  \n  setFilter(type, filter, value) {\n    const newFilters = this.state.filters\n    if (!newFilters[type]) {\n      newFilters[type] = []\n    }\n\n    if (value.toggled === true) {\n      newFilters[type].push(filter.type)\n    }\n    else {\n      newFilters[type] = newFilters[type].filter(f => f !== filter.type)\n    }\n\n    this.setState({\n      filters: newFilters\n    })\n  }\n\n  dataTable() {\n    let sortFilters = this.state.filters\n    const filteredData =  _.chain(Data)\n    .orderBy('s_name')\n    .filter((spell) => {\n      return _.includes(sortFilters['School of Magic'], spell.s_school) || sortFilters['School of Magic'].length === 0\n    })\n    .filter((spell) => {\n      return _.includes(sortFilters['Level'], spell.s_lvl) || sortFilters['Level'].length === 0\n    })\n    .filter((spell) => {\n      return _.includes(sortFilters['Effect Type'], spell.s_type) || sortFilters['Effect Type'].length === 0\n    })\n    .filter((spell) => {\n      return sortFilters['Class'].some(c => spell.s_class_usage.includes(c)) || sortFilters['Class'].length === 0\n    })\n    .filter((spell) => {\n      return spell.s_name.toLowerCase().includes(this.state.filterSearch.toLowerCase()) || this.state.filterSearch === ''\n    })\n    .value()\n\n    return (\n      <div className={\"spell-wrap\"}>\n        <h1>Spell list</h1>\n        {_.orderBy(filteredData, 's_name').map((spell, i) => {\n          return (\n            <div className={\"spell-info\"} key={i}>\n              <div className={this.state.showList === i ? \"spell-dropdown\" : \"spell-dropdown hide-child\"}>\n                <div className={\"spell-name\"} onClick={(e) => {this.addClassName(e, i)}}>\n                  <span>{spell.s_name}</span>\n                  <div className={\"spell-tooltip\"}>L: {spell.s_lvl.slice(0, 1)}</div>\n                </div>\n                <TogglePin type={spell.s_id} key={i} onPin={this.onPin} />\n                {(() => {\n                  if (this.state.showList === i) {\n                    return (\n                      <div className={\"spell-definitions\"}>\n                        <div className={\"spell-top-level\"}>\n                          <i>{spell.s_lvl} Level {spell.s_school} spell {spell.s_ritual === true ? '(ritual)' : ''}</i>\n                        </div>\n                        <div className={\"spell-details\"}>\n                          <div className={\"spell-casting-time\"}><b>Casting Time:</b> {spell.s_cast_time}</div>\n                          <div className={\"spell-range\"}><b>Range:</b> {spell.s_range}</div>\n                          <div className={\"spell-components\"}><b>Components:</b> {spell.s_components}</div>\n                          <div className={\"spell-duration\"}><b>Duration:</b> {spell.s_duration}</div>\n                        </div>\n                        <div className={\"spell-description\"}>{ReactHtmlParser(spell.s_description)}</div>\n                      </div>\n                    )\n                  }\n                })()}\n              </div>\n            </div>\n          )\n        })}\n        {filteredData.length === 0 ?\n        <div className={\"spell-undefined\"}>\n          Sorry, no spells found for this criteria!\n        </div>\n        : null}\n      </div>\n    )\n  }\n\n  dataTablePinned() {\n    let pinnedSpells = this.state.pin\n    const filteredData =  _.chain(Data)\n    .orderBy('s_name')\n    .filter((spell) => {\n      return _.includes(pinnedSpells['id'], spell.s_id)\n    })\n    .value()\n\n    if (filteredData.length > 0) {\n      return (\n        <div className={\"spell-wrap\"}>\n          <h1>Pinned Spell list</h1>\n          {_.orderBy(filteredData, 's_name').map((spell, i) => {\n            return (\n              <div className={\"spell-info\"} key={i}>\n                <div className={this.state.showList === i ? \"spell-dropdown\" : \"spell-dropdown hide-child\"}>\n                  <div className={\"spell-name\"} onClick={(e) => {this.addClassName(e, i)}}>\n                    <span>{spell.s_name}</span>\n                    <div className={\"spell-tooltip\"}>L: {spell.s_lvl.slice(0, 1)}</div>\n                  </div>\n                  <svg className={\"spell-remove-pin\"} onClick={(e) => {this.removePin(spell.s_id)}} width=\"20\" height=\"20\" viewBox=\"0 0 12 16\" version=\"1.1\" aria-hidden=\"true\"><path fillRule=\"evenodd\" d=\"M7.48 8l3.75 3.75-1.48 1.48L6 9.48l-3.75 3.75-1.48-1.48L4.52 8 .77 4.25l1.48-1.48L6 6.52l3.75-3.75 1.48 1.48L7.48 8z\"></path></svg>\n                  {(() => {\n                    if (this.state.showList === i) {\n                      return (\n                        <div className={\"spell-definitions\"}>\n                          <div className={\"spell-top-level\"}>\n                            <i>{spell.s_lvl} Level {spell.s_school} spell {spell.s_ritual === true ? '(ritual)' : ''}</i>\n                          </div>\n                          <div className={\"spell-details\"}>\n                            <div className={\"spell-casting-time\"}><b>Casting Time:</b> {spell.s_cast_time}</div>\n                            <div className={\"spell-range\"}><b>Range:</b> {spell.s_range}</div>\n                            <div className={\"spell-components\"}><b>Components:</b> {spell.s_components}</div>\n                            <div className={\"spell-duration\"}><b>Duration:</b> {spell.s_duration}</div>\n                          </div>\n                          <div className={\"spell-description\"}>{ReactHtmlParser(spell.s_description)}</div>\n                        </div>\n                      )\n                    }\n                  })()}\n                </div>\n              </div>\n            )\n          })}\n        </div>\n      )\n    }\n  }\n\n  render() {\n    return (\n      <div className={\"dndapp-table\"}>\n        <div className={\"dndapp-selectors\"}>\n          {this.searchBar()}\n          {this.filterFilter()}\n          {this.filterDropdowns()}\n        </div>\n        <div className={\"dndapp-data\"}>\n          {this.dataTablePinned()}\n          {this.dataTable()}\n        </div>\n      </div>\n    )\n  }\n\n}\n\nexport default DataTable\n","import React, { Component } from 'react'\nimport DataTable from './../data-table/data-table'\n\n// Output Component\nclass Output extends Component {\n\n  render() {\n    return (\n      <div className={\"dndapp-wrapper\"}>\n        <DataTable/>\n      </div>\n    )\n\n  }\n\n}\n\nexport default Output\n","import React from 'react'\nimport Output from './components/output/output'\nimport './App.css'\n\nfunction App() {\n  return (\n    <div className={\"dndapp dark-theme\"}>\n      <header className={\"dndapp-header\"}>\n        Prophet&#39;s Companion<br></br>\n        v0.44:41ph4\n      </header>\n      <div className={\"dndapp-body\"}>\n        <Output />\n      </div>\n      <div className={'dndapp-footer'}>\n        <i>Va'esse deireádh aep eigean, va'esse eigh faidh'ar</i>\n        <i>by: <a href=\"https://github.com/prophet-kn\">prophet-kn</a></i>\n        <br></br>\n        <i>\n          Wizards of the Coast, Dungeons &#38; Dragons, and their logos are trademarks of Wizards of the Coast LLC in the United States and other countries. © 1993-2019 Wizards. All Rights Reserved.\n          This React App, D&#38;D 5e Spellbook Companion, is not affiliated with, endorsed, sponsored, or specifically approved by Wizards of the Coast LLC. This React App, D&#38;D 5e Spellbook Companion, may use the trademarks and other intellectual property of Wizards of the Coast LLC, which is permitted under <a href=\"https://dnd.wizards.com/articles/features/fan-site-kit\">Wizards' Fan Site Policy</a>. For example, Dungeons &#38; Dragons® is a trademark[s] of Wizards of the Coast. For more information about Wizards of the Coast or any of Wizards' trademarks or other intellectual property, please visit their website at (<a href=\"https://www.wizards.com\">www.wizards.com</a>).\n        </i>\n      </div>\n    </div>\n\n  );\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('dndapp'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n\n                                                \nconsole.log( // eslint-disable-next-line\n  \"%c\\                      |         |       |           \\n\\\n  ,---.,---.,---.,---.|---.,---.|---    |__/ ,---.  \\n\\\n  |   ||    |   ||   ||   ||---'|    ---|  \\\\ |   |  \\n\\\n  |---'`    `---'|---'`   '`---'`---'   `   ``   '  \\n\\\n  |              |                                  \", \"background-color: black; color: red;\"\n)\n"],"sourceRoot":""}